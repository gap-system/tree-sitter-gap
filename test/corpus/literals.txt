=====================================
Integers
=====================================

-1;
1;
-12345678901234567890;
12345678901234567890;

---

(source_file
  (unary_expression (integer))
  (integer)
  (unary_expression (integer))
  (integer)
  )

=====================================
Floats
=====================================

1.0;
-.6;
+.1;
123.4123;
1.;

---

(source_file
  (float)
  (unary_expression (float))
  (unary_expression (float))
  (float)
  (float))

=====================================
Scientific Notation Floats
=====================================

1.e322;
1.e-3;
1.e+3;
1.8e10;
1.e10;
-1.e10;
+6.022e23;
.1e10;
1.E322;
1.E-3;
1.E+3;
1.8E10;
1.E10;
-1.E10;
+6.022E23;
.1E10;
1.8d10;
1.8D10;
1.8q10;
1.8Q10;

---

(source_file
  (float)
  (float)
  (float)
  (float)
  (float)
  (unary_expression (float))
  (unary_expression (float))
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (unary_expression (float))
  (unary_expression (float))
  (float)
  (float)
  (float)
  (float)
  (float))

=====================================
Strings
=====================================

"abc";
"a'c";
"a\"c";
"a\142c";
"a\0x62c";
"""abc""";
"""a'c""";
"""a"c""";

---

(source_file
  (string)
  (string)
  (string (escape_sequence))
  (string (escape_sequence))
  (string (escape_sequence))
  (string)
  (string)
  (string)
  )

=====================================
Multi-line strings
=====================================

"""
A double quote hello,
without double or single quotes.
""";

"""
A double quote "hello",
with double quotes.
""";

"""
A double quote 'hello',
with single quotes.
""";

"""A double quote hello,
with text on top.
""";

"""
A double quote hello,
with text on bottom.""";

"""A double quote hello,
with text on top,
and on bottom.""";

---

(source_file
  (string)
  (string)
  (string)
  (string)
  (string)
  (string)
  )

=====================================
Character
=====================================

'b';
'\'';
'\n';
'\\';
'\142';
'\0x62';

---

(source_file
  (char)
  (char (escape_sequence))
  (char (escape_sequence))
  (char (escape_sequence))
  (char (escape_sequence))
  (char (escape_sequence))
  )

=====================================
Other primitives
=====================================

true;
false;

---

(source_file
  (true)
  (false)
  )


=====================================
Line continuations
=====================================

123\
456;

"a split\
string";

---

(source_file
  (integer)
  (string)
  )
