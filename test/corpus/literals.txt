=====================================
Integers
=====================================

-1;
1;
-12345678901234567890;
12345678901234567890;

---

(source_file
  (unary_expression (integer))
  (integer)
  (unary_expression (integer))
  (integer)
  )

=====================================
Floats
=====================================

1.0;
# (unary_expression (float))
#-.6;
# (unary_expression (float))
#+.1;
123.4123;
1.;
123.;
+1.;

---

(source_file
  (float)
  (comment)
  (comment)
  (comment)
  (comment)
  (float)
  (float)
  (float)
  (unary_expression (float)))

=====================================
Scientific Notation Floats
=====================================

1.e322;
1.e-3;
1.e+3;
1.8e10;
1.e10;
-1.e10;
+6.022e23;
.1e10;
1.E322;
1.E-3;
1.E+3;
1.8E10;
1.E10;
-1.E10;
+6.022E23;
.1E10;
1.8d10;
1.8D10;
1.8q10;
1.8Q10;

---

(source_file
  (float)
  (float)
  (float)
  (float)
  (float)
  (unary_expression (float))
  (unary_expression (float))
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (unary_expression (float))
  (unary_expression (float))
  (float)
  (float)
  (float)
  (float)
  (float))

=====================================
Conversion marker Floats
=====================================

1.0i;
#.0i;
1.i;
1.e322a;
1.e-3b;
1.e+3c;
1.8e10d;
1.e10e;
-1.e10f;
+6.022e23g;
.1e10A;
1.E322B;
1.E-3C;
1.E+3D;
1.8E10E;
1.E10F;
-1.E10G;
+6.022E23H;
.1E10I;
1.8d10J;
1.8D10K;
1.8q10L;
1.8Q10M;

---

(source_file
  (float)
  (comment)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (unary_expression (float))
  (unary_expression (float))
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (unary_expression (float))
  (unary_expression (float))
  (float)
  (float)
  (float)
  (float)
  (float))

=====================================
Eager Conversion Floats
=====================================

1.0_l;
#.0_r;
1._I;
1.e322_a;
1.e-3_b;
1.e+3_c;
1.8e10_d;
1.e10_e;
-1.e10_f;
+6.022e23_A;
.1e10_B;
1.E322_C;
1.E-3_D;
1.E+3_E;
1.8E10_F;
1.E10_G;
-1.E10_o;
+6.022E23_p;
.1E10_q;
1.8d10_d;
1.8D10_l;
1.8q10_L;
1.8Q10_L;
1.0_;
#.0_;
1._;
1.e322_;

---

(source_file
  (float)
  (comment)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (unary_expression (float))
  (unary_expression (float))
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (unary_expression (float))
  (unary_expression (float))
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (comment)
  (float)
  (float))

=====================================
Strings
=====================================

"abc";
"a'c";
"a\"c";
"a\142c";
"a\0x62c";
"a\142c\142d";
"a\142\142c";
"""abc""";
"""a'c""";
"""a"c""";
"""a\c""";
"""a\'c""";
"hello#world";
"""hello#world""";
 "abc";
 """abc""";

---

(source_file
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content
      (escape_sequence))
    (string_end))
  (string
    (string_start)
    (string_content
      (escape_sequence))
    (string_end))
  (string
    (string_start)
    (string_content
      (escape_sequence))
    (string_end))
  (string
    (string_start)
    (string_content
      (escape_sequence)
      (escape_sequence))
    (string_end))
  (string
    (string_start)
    (string_content
      (escape_sequence)
      (escape_sequence))
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
)

=====================================
Multi-line strings
=====================================

"""
A double quote hello,
without double or single quotes.
""";

"""
A double quote "hello",
with double quotes.
""";

"""
A double quote 'hello',
with single quotes.
""";

"""A double quote hello,
with text on top.
""";

"""
A double quote hello,
with text on bottom.""";

"""A double quote hello,
with text on top,
and on bottom.""";

"""ABCD\3
EFG\""";

---

(source_file
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content)
    (string_end))
)

=====================================
Character
=====================================

'b';
'\'';
'\n';
'\\';
'\142';
'\0x62';
'#';
''';

---

(source_file
  (char)
  (char (escape_sequence))
  (char (escape_sequence))
  (char (escape_sequence))
  (char (escape_sequence))
  (char (escape_sequence))
  (char)
  (char)
)

=====================================
Other primitives
=====================================

true;
false;
fail;

---

(source_file
  (bool)
  (bool)
  (bool)
  )


=====================================
Line continuations
=====================================

123\
456;

"a split\
string";

"Hello\
World\nHow\
Are you?";

abc := 345\
678;

abc := "a split\
string";

100.1\
000;

101\
0.00;

101\
.00;

101.\
00;

101.\
e10;

101.\
a;

101.\
_l;

101.\
_;

101\
._;

101._\
l;

101.\
;

101.\
\
;

101\
.\
;

101\
.;

10\
1.;

'\14\
2';

'a\
';

'\
a';

"""Hello\
World""";


---

(source_file
  (integer)
  (string
    (string_start)
    (string_content)
    (string_end))
  (string
    (string_start)
    (string_content
      (escape_sequence))
    (string_end))
  (assignment_statement
    (identifier)
    (integer))
  (assignment_statement
    (identifier)
    (string
      (string_start)
      (string_content)
      (string_end)))
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (float)
  (char (escape_sequence))
  (char)
  (char)
  (string
    (string_start)
    (string_content)
    (string_end))
)
